comment: |
  Interview-specific. Each interview should have this file as well.

  ## Definitions:
  `remote` in here refers to devices of signers other than the user or those using the user's device.
  
  ## Limitations:
  - Remote users never see the doc update (not MVP)
---
include:
  - remote_signer_handler.yml
---
modules:
  - docassemble.VirtualCourtToolbox.shortenURL
---
# Currently getting here with the url in the console of the initial interview
mandatory: True
code: |
  get_remote_signature
---
generic object: Individual
code: |
  # TODO: Should this be in sign_on_device.yml?
  # TODO: Send with action arguments (in templates)
  #if x.send_method == 'text':
  #  x.send_sms_signature_link
  #elif x.send_method == 'email':  # Not implemented for MVP
  #  x.send_email_signature_link
  x.message_result = send_sms(task='send link to other device', to=x.device_number, template=x.sms_device_template)
  x.send_signature_link = True  # Used by sign_on_device.yml
---
generic object: Individual
template: x.sms_device_template
content:
  You have chosen to sign on this device, ${ x }. ${ device_choice_url }
---
code: |
  long_device_choice_url = interview_url_action( 'get_remote_signature', device_id='tbd', interview_data_id=interview_data_id, party_id=signer.id )
  device_choice_url = shortenMe( long_device_choice_url ).shortenedURL
---
###################
# Interfacing directly with remote signer code
##################
---
id: x.after_signature_saved
event: x.after_signature_saved
generic object: Individual
code: |
  x.end
  #x.status
---
id: x.after_unwilling_to_sign_saved
event: x.after_unwilling_to_sign_saved
generic object: Individual
code: |
  x.unwilling_to_sign_end
---
###################
# Interfacing directly with script for user choosing other device to sign on
##################
---
id: willing to sign
generic object: Individual
question: |
  Are you willing to sign this document?
yesno: x.willing_to_sign
---
id: signature
generic object: Individual
question: |
  Signature ${ x }
signature: x.signature
---
###################
# Questions interacting with the above
##################
---
id: remote signer end
generic object: Individual
event: x.end
question: |
  Thank you
subquestion: |
  You have signed ${ redis.get_data( url_args['interview_data_id'] )['user_names'] }'s document. They will get your signature soon.
---
## Inactive. Should show signed doc with status, but not updating.
#id: signature status
#event: x.status
#generic object: Individual
#prevent going back: True
#question: |
#  Signature status for ${ x }
#subquestion: |
#  ${ redis.get_data( url_args['interview_data_id'] )['user_names'] }'s document.
#  
#  ${ redis.get_data( url_args['interview_data_id'] )[ 'signed_doc' ] }
---
id: unwilling to sign end
generic object: Individual
event: x.unwilling_to_sign_end
question: |
  Thank you and goodbye
buttons:
  - Exit: exit
---
id: unauthorized
event: unauthorized
# Add 404 here, as old multiuser example?
question: |
  Thank you and goodbye
buttons:
  - Exit: exit
